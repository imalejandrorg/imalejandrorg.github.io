[["index.html", "Curso de R básico Requisitos 0.1 Descarga de R y RStudio", " Curso de R básico Alejandro Ruiz-García Requisitos Antes de comenzar con el curso es necesario que descarguemos ciertos programas entre ellos están incluidos R y RStudio. 0.1 Descarga de R y RStudio Tenemos que distinguir entre R y RStudio. Como tal, R es el lenguaje de programación y RStudio es el ambiente de trabajo donde utilizamos este lenguaje de programación. Para descargar R podemos acceder al link de esta página. Una vez descargado e instalado R, procedemos a descargar RStudio desde esta página. Con estas herramientas podemos comenzar a trabajar en RStudio. "],["introducción-a-r.html", "Lección 1 Introducción a R 1.1 Interfaz 1.2 Creando nuestro primer proyecto 1.3 Objetos y variables 1.4 Instalar paquetes 1.5 Importar datos a R 1.6 Comentarios 1.7 Exportar datos 1.8 Pedir ayuda", " Lección 1 Introducción a R En esta lección veremos las nociones más básicas de R y RStudio, cómo escribir tablas, cómo importar datos, entre otras cosas. 1.1 Interfaz R Studio cuenta con 4 ventanas esenciales: La consola, que es donde se ejecutan los comandos y se visualizan los outputs de nuestros análisis. Los scripts, que corresponde a la ventana superior izquierda. No solamente se visualizan scripts, también se pueden trabajar otros formatos, aunque generalmente será donde nosotros escribamos los comandos que la consola va a ejecutar. El Envirnoment y el History que corresponden a la ventana superior derecha, aunque también cuenta con otras herramientas útiles como Build y Git que se utilizan en cuestiones más avanzadas. Los Files, Packages y Plots así como la ventana de Help que corresponden a la esquina inferior derecha. Básicamente estas son las 4 pestañas de esta ventana que estaremos utilizando. Adicionalmente, en la ventana de Tools -&gt; Global Options -&gt; Appearance podemos configurar los colores de nuestra interfaz, el tamaño de la fuente, el zoom, el tema del editor y la tipografía. Personalmente encuentro los colores oscuros más cómodos para trabajar, por eso elegí el tema Material. 1.2 Creando nuestro primer proyecto Una vez que nos familiarizamos con la interfaz, es momento de crear nuestro primer proyecto. Para esto, debemos dar clic en File -&gt; New Project para que nos aparezca una ventana como la siguiente. Creamos un nuevo directorio que se guarda por defecto en la carpeta de Documentos de nuestro ordenador. SE RECOMIENDA NO DEJAR ESPACIOS EN EL NOMBRE. En su lugar, podemos utilizar guión bajo (_), el símbolo de menos (-) o un punto (.). Una vez creado nuestro proyecto, vamos a crear un nuevo archivo script tecleando Ctrl + Shift + N. Deberíamos tener un ambiente de trabajo más o menos así. Otra recomendación es guardar nuestro script en la misma carpeta del proyecto, así como las bases de datos y demás archivos que vayamos a utilizar. Para saber cuál es la carpeta de nuestro proyecto, podemos teclear el siguiente comando en la consola. getwd() ## [1] &quot;O:/Tesis/R/Webpage/imalejandrorg.github.io/Curso_R_basico&quot; Para cambiar el directorio de trabajo, simplemente tecleamos en la consola la siguiente función. setwd(&quot;O:/Documentos/R_Basico&quot;) getwd() ## [1] &quot;O:/Documentos/R_Basico&quot; De esta manera cambiamos el directorio de nuestro proyecto actual y sabemos en qué carpeta ingresar nuestros archivos. Para guardar nuestro script simplemente hacemos clic en icono del disquete o con las teclas Ctrl + S. Recuerda que es recomendable guardar el script en la misma carpeta que nuestro proyecto. 1.3 Objetos y variables Para que un comando que queramos ejecutar permanezca almacenado, debemos asignar un nombre al resultado. La manera en la que R hace esto es a través de los símbolos &lt;- o = (cuyo atajo de escritura es Alt + -). Por ejemplo, si queremos realizar una suma de 5 + 5 pondríamos el siguiente código en la consola. 5 + 5 ## [1] 10 Sin embargo, si queremos almacenar este resultado necesitamos nombrar a una variable con este resultado. Por ejemplo, una variable llamada suma. suma &lt;- 5 + 5 suma ## [1] 10 Como podemos ver en ambos casos obtenemos los mismos resultados. Sin embargo, en el segundo caso encontraremos una variable llamada suma en nuestro Environment en el panel superior derecho. En caso de que estemos interesados en asignar valores categóricos, estos deben estar encomillados. letraA &lt;- &quot;A&quot; De nuevo se agregará esta variable a nuestro Environment. Para corroborar el tipo de dato que tenemos podemos utilizar la función class(x) donde x es el nombre de nuestra variable. class(letraA) ## [1] &quot;character&quot; class(suma) ## [1] &quot;numeric&quot; Para los análisis de datos de naturaleza biológica normalmente se trabaja con matrices de datos con múltiples caracteres tanto categóricos como cuantitativos, que en R corresponde a un data frame. Por ejemplo, los datos de una matriz llamada dune del paquete vegan corresponde a una matriz de datos. data(&quot;dune&quot;) class(dune) ## [1] &quot;data.frame&quot; Achimill Agrostol Airaprae Alopgeni Anthodor Bellpere Bromhord Chenalbu Cirsarve Comapalu Eleopalu Elymrepe Empenigr Hyporadi Juncarti Juncbufo Lolipere Planlanc Poaprat Poatriv Ranuflam Rumeacet Sagiproc Salirepe Scorautu Trifprat Trifrepe Vicilath Bracruta Callcusp 1 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 7 0 4 2 0 0 0 0 0 0 0 0 0 0 3 0 0 2 0 3 4 0 0 0 0 4 0 0 0 0 5 0 4 7 0 0 0 0 5 0 5 0 0 0 0 4 0 7 0 2 0 0 0 0 0 4 0 0 0 0 6 0 5 6 0 0 0 0 2 0 2 0 2 0 0 8 0 2 0 2 3 0 2 0 0 4 0 0 0 0 5 0 4 5 0 0 5 0 2 0 1 0 2 0 2 0 0 0 4 2 2 0 0 0 0 4 0 0 0 0 2 5 2 6 0 5 0 0 3 2 2 0 2 0 2 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 6 5 3 4 0 6 0 0 3 5 5 0 6 0 2 0 0 0 2 0 2 0 0 0 0 0 0 0 0 2 6 5 4 5 0 3 0 0 3 2 2 0 2 0 0 4 0 5 0 0 0 0 0 0 4 0 0 0 4 0 4 0 4 4 2 0 2 0 3 0 2 0 2 0 0 3 0 3 0 0 0 0 0 0 0 6 0 0 4 4 2 0 4 5 0 2 2 0 2 0 3 0 2 0 4 0 0 0 4 2 4 0 0 0 0 0 0 0 0 0 6 3 4 4 0 0 0 0 3 0 6 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 7 3 4 0 0 0 2 0 5 0 3 2 4 0 0 4 0 8 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 4 0 2 4 0 2 0 3 0 4 0 0 5 0 5 0 0 0 1 0 0 0 0 0 0 0 3 0 0 2 9 2 0 2 0 2 0 2 0 0 0 0 4 0 0 0 0 0 0 0 2 4 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 6 0 0 4 0 4 0 0 0 0 0 0 0 2 5 0 0 0 3 0 0 0 0 0 2 0 0 0 2 0 1 0 4 0 0 7 0 4 0 0 0 0 0 0 8 0 0 0 3 0 0 0 0 2 2 0 0 0 0 0 0 0 4 3 2 0 2 0 4 0 0 0 0 0 0 0 0 2 0 0 0 2 1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 2 3 3 0 0 0 0 3 5 0 2 1 6 0 0 0 3 0 4 0 0 0 0 0 0 0 2 5 0 0 0 0 0 0 0 0 3 3 6 0 2 0 3 0 0 5 0 0 0 0 0 0 0 0 4 0 0 0 4 0 0 0 0 0 4 0 0 5 2 0 0 0 4 3 1.4 Instalar paquetes Una de las herramientas más útiles de R es la instalación de paquetes. No tenemos la necesidad de escribir nuestras propias funciones cada que queramos realizar un análisis. En su lugar, bajamos e instalamos paquetes que nos sirven para ciertas funciones. Por ejemplo, uno de los paquetes más utilizados es el de vegan, útil para realizar análisis ecológicos. Para instalar los paquetes escribimos la siguiente función en la consola. install.packages(&quot;vegan&quot;) Tenemos que conocer el nombre exacto del paquete, en este caso, vegan está escrito con una v minúscula. Tenemos que entender que instalar un paquete no es lo mismo que llamarlo. Para esto último utilizamos la siguiente función. library(vegan) Vemos que en esta ocasión llamamos al paquete sin necesidad de poner el entrecomillado. En ocasiones la función install.package() puede arrojarnos error. Una alternativa es utilizar la ventana de Packages del panel inferior derecho. Damos clic en Install y escribimos el nombre del paquete. Nos irán apareciendo opciones con el nombre del paquete de interés. Lo seleccionamos y damos clic en Install. 1.5 Importar datos a R La mayor parte del tiempo lo que queremos hacer es importar nuestros propios datos a R. En este caso utilizaremos las matrices de datos presentadas en el libro de Palacio et al. (2020). Utilizaremos una base de datos de aves del capítulo 6 del libro de Palacio et al. (2020). Descargar: Aves.txt Una vez que tenemos nuestra base de datos en la carpeta de nuestro proyecto, la importamos a través de la función read.table(). Aves &lt;- read.table(&quot;Aves.txt&quot;) View(Aves) V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 V17 V18 V19 V20 V21 V22 V23 V24 V25 V26 V27 V28 V29 V30 V31 V32 V33 V34 V35 sitio estacion ambiente agebad amabra rupmag spimag chlluc colmel patpic cycguj elapar furruf geoaeq ictcay lepang mimsat molbon myimac myimon pacpol phastr pitsul poldum poomel rossoc sicfla siclut spocae synspi troaed turruf viroli zenaur zoncap 2 inv bosque 1 0 0 0 0 2 2 1 0 6 1 1 1 1 0 0 0 0 0 2 0 0 1 0 0 0 0 5 3 0 2 5 2 oto bosque 1 0 1 0 0 3 2 0 0 2 0 0 2 5 0 0 0 0 0 3 0 0 1 0 0 0 0 3 4 0 1 0 2 pri bosque 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 4 0 1 6 2 ver bosque 1 0 0 0 0 3 0 0 1 6 0 0 4 0 0 0 0 1 1 6 0 0 0 0 0 0 0 1 1 0 8 2 3 inv arbustal 1 0 0 0 0 1 0 0 0 6 0 0 1 0 3 0 0 0 1 2 0 0 3 0 0 0 2 6 3 0 2 6 3 oto arbustal 0 0 0 0 0 0 0 0 0 8 0 0 2 0 0 0 0 0 1 3 0 0 3 0 0 0 0 3 6 0 1 1 3 pri arbustal 0 0 0 0 0 2 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 0 4 3 3 ver arbustal 3 0 0 0 2 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 5 4 4 inv arbustal 8 0 0 10 0 0 0 0 0 1 2 2 1 0 1 0 14 0 2 1 0 2 0 0 0 0 1 3 1 0 4 6 4 oto arbustal 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 3 3 0 0 0 0 0 4 3 0 0 1 4 pri arbustal 0 0 0 0 0 0 0 0 0 0 3 0 0 0 2 0 0 0 1 2 0 0 0 0 4 0 0 4 1 0 1 4 4 ver arbustal 1 0 0 0 0 0 0 0 0 3 1 0 0 0 0 1 0 0 1 2 0 0 0 0 0 3 2 2 0 0 0 4 5 inv bosque 0 0 0 0 0 3 2 3 0 4 1 2 1 0 1 0 0 0 0 9 0 0 0 0 0 0 0 2 0 0 2 3 5 oto bosque 37 0 2 0 0 2 2 0 0 2 0 0 1 0 0 0 0 0 0 3 2 0 0 0 0 0 0 3 2 0 0 3 5 pri bosque 0 0 0 1 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 3 1 1 4 5 ver bosque 10 0 2 0 0 2 0 2 2 0 0 0 0 0 0 1 0 3 0 5 0 0 0 0 0 0 1 1 2 2 1 5 6 inv bosque 0 0 5 0 0 1 2 1 0 4 0 0 1 0 0 0 0 0 0 8 2 0 0 0 0 0 0 0 3 0 4 6 6 oto bosque 0 1 4 0 0 0 2 0 0 3 0 0 1 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 2 0 6 pri bosque 2 0 2 0 0 0 0 1 4 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 2 2 0 3 6 ver bosque 0 4 3 0 1 1 0 0 2 1 0 0 1 0 0 4 0 4 0 1 0 0 0 0 0 0 0 0 1 1 4 3 7 inv bosque 0 0 1 0 1 0 6 0 2 0 0 1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 16 0 4 2 7 oto bosque 0 0 0 0 0 1 2 1 0 2 0 2 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 0 1 0 7 pri bosque 0 0 1 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2 2 2 3 7 ver bosque 1 0 0 0 0 1 7 0 3 2 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 0 5 2 8 inv arbustal 0 0 0 0 0 0 0 2 0 1 1 0 0 2 2 0 0 0 0 3 0 0 1 2 2 0 0 1 1 0 3 9 8 oto arbustal 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 3 8 pri arbustal 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 4 0 0 0 4 2 1 0 1 0 0 0 8 8 ver arbustal 0 0 0 0 1 0 0 0 2 2 0 0 1 0 0 0 0 0 0 2 1 0 0 0 0 7 1 4 4 0 0 5 9 inv arbustal 0 0 0 0 0 4 0 0 0 0 0 0 0 0 1 0 3 0 0 0 1 1 0 0 4 0 0 5 1 0 2 13 9 oto arbustal 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 6 0 1 2 9 pri arbustal 0 0 0 0 0 0 0 0 0 0 3 0 0 0 1 0 0 0 0 2 0 0 0 0 5 0 0 0 1 0 0 6 9 ver arbustal 3 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 0 3 11 6 1 2 0 0 0 31 10 inv arbustal 0 0 0 1 0 0 0 0 0 0 1 0 2 0 8 0 0 0 2 4 0 0 0 0 3 0 1 0 1 0 1 14 10 oto arbustal 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 3 0 0 1 0 0 0 3 0 4 0 0 7 10 pri arbustal 0 0 0 0 0 0 0 0 0 2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 11 10 ver arbustal 1 0 0 0 0 1 0 0 0 7 2 0 0 0 0 0 0 0 0 2 0 0 0 0 3 8 1 2 0 0 0 12 También podemos importar archivos .csv utilizando la función read.csv(). Aves_csv &lt;- read.csv(&quot;Aves.csv&quot;) Así obtendríamos la misma tabla anterior. En caso de que queramos leer archivos excel, podemos hacerlo utilizando la librería readxl. En caso de ya tener instalado el paquete no es necesario que pongan la función install.packages(readxl), al ya tenerlo instalado yo omití esta parte poniéndole el símbolo de gato #. #install.packages(&quot;readxl&quot;) library(readxl) Aves_xlsx &lt;- read_excel(&quot;Aves.xlsx&quot;) Estas tres formas de importar los datos nos producen la misma matriz. Sin embargo podemos ver que la clase del archivo importado desde excel pertenece a una subclase de los archivos de tipo data frame llamada tibble. Sin embargo, se recomienda que se cambie el tipo de archivo a solamente data.frame. Para hacer esto podemos escribir el siguiente código Aves_xlsx &lt;- data.frame(Aves_xlsx) class(Aves_xlsx) ## [1] &quot;data.frame&quot; Básicamente le estamos diciendo a R que escriba un data frame con el mismo nombre que el data frame de subtipo tibble. De esta manera sobrescribimos el primer archivo y mantenemos limpio nuestro espacio de trabajo. También se puede importar desde el botón Import Dataset que aparece en la ventana de nuestro Environment. De igual manera se recomienda copiar el código al script para saber exactamente qué hacemos. 1.6 Comentarios Algo muy útil que podemos agregar a nuestro código o script son los comentarios. Estos pueden ayudarnos a recordar qué realiza alguna línea de código o alguna función o argumento en particular. La manera en la que agregamos comentarios es con el símbolo de gato #. #Esta función sirve para importar archivos. Aves &lt;- read.table(&quot;Aves.txt&quot;) Podemos ver como al poner un # antes de una línea de código esta cambia a color gris. Lo que sea que realice esta línea no será leída. 1.7 Exportar datos En algunas ocasiones queremos trabajar con otro software o queremos exportar nuestra tabla modificada a Excel. Para hacer esto, utilizamos la función write, por ejemplo. #Filtramos nuestro archivo para tener solo las abundancias. Abun &lt;- Aves[,4:35] #Exportamos nuestro archivo en formato .csv write.table(Abun, file = &quot;Abundancias.csv&quot;, sep = &quot;,&quot;, row.names = FALSE, col.names = FALSE) De esta manera omitimos los nombres de la columnas y de las filas, además especificamos que queremos un documento en formato .csv, y que la separación sea por comas. Si no especificamos la ruta, guardaremos nuestro archivo en nuestro directorio de trabajo, si queremos guardar el archivo en un directorio específico, tendremos que dar la ruta antes de poner el nombre. write.table(Abun, file = &quot;O:/Documentos/R_Basico/Lección_1/Abundancias.csv&quot;, sep = &quot;,&quot;, row.names = FALSE, col.names = FALSE) Como podemos ver, el archivo fue escrito en la dirección indicada. 1.8 Pedir ayuda En caso de que no sepamos que argumentos van en alguna función, podemos pedir ayuda en la consola utilizando el símbolo de interrogación ?. ?specaccum Cuando nosotros escribimos esto, se abrirá la ventana de Help en el panel inferior derecho y nos mostrará una pequeña descripción de la función, así como sus usos y qué argumentos utilizar. En ocasiones incluso podemos encontrar ejemplos. "],["estadística-descriptiva.html", "Lección 2 Estadística descriptiva 2.1 ", " Lección 2 Estadística descriptiva En esta lección veremos las nociones básicas de estadística descriptiva haciendo uso de R y RStudio. Veremos medidas de tendencia central como la media, mediana y moda y medidas de dispersión como varianza, desviación estándar e intervalos de confianza. 2.1 "],["methods.html", "Lección 3 Methods", " Lección 3 Methods We describe our methods in this chapter. "],["applications.html", "Lección 4 Applications 4.1 Example one 4.2 Example two", " Lección 4 Applications Some significant applications are demonstrated in this chapter. 4.1 Example one 4.2 Example two "],["final-words.html", "Lección 5 Final Words", " Lección 5 Final Words We have finished a nice book. "],["references.html", "References", " References Palacio, F. X., Apodaca, M. J., &amp; Crisci, J. V. (2020). Análisis multivariado para datos biológicos. Teoría y su aplicación utilizando el lenguaje r. Fundación Azara. "]]
